buildscript {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url = 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.70'
        classpath group: 'com.wynprice.cursemaven', name: 'CurseMaven', version: '2.1.1'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'com.wynprice.cursemaven'

version = '1.12.2-0.2.4.0'
group = 'thedarkcolour.futuremc'
archivesBaseName = 'future-mc'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = compileKotlin.kotlinOptions.jvmTarget = '1.8'

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'

    mappings = 'stable_39'
}

jar {
    manifest.attributes(
            'FMLCorePlugin': 'thedarkcolour.futuremc.asm.CoreLoader',
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLAT': 'futuremc_at.cfg'
    )
}

repositories {
    maven {
        name = 'CraftTweaker/Quark/AutoRegLib'
        url = 'http://maven.blamejared.com'
    }
    maven {
        name = 'JEI'
        url = 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name = 'Forgelin'
        url = 'http://maven.shadowfacts.net/'
    }
    maven {
        name = 'TOP'
        url = 'http://maven.tterrag.com/'
    }
    maven {
        name = 'Tinkers Construct'
        url = 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name = 'TeamCoFH mods'
        url = 'https://maven.covers1624.net/'
    }
    maven {
        name = 'ChickenBones'
        url = 'http://chickenbones.net/maven/'
    }
    maven {
        name = 'CurseForge'
        url = 'https://minecraft.curseforge.com/api/maven/'
    }
}

dependencies {
    implementation 'CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.19.548'
    implementation 'mezz.jei:jei_1.12.2:4.15.0.+'
    implementation 'net.shadowfacts:Forgelin:1.8.4'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.70'
    provided 'vazkii.quark:Quark:r1.6-180.7'
    compileOnly 'vazkii.autoreglib:AutoRegLib:1.3-32.+'
    compileOnly 'curse.maven:dynamic-trees:2870267'
    compileOnly 'curse.maven:dynamic-trees-sources:2870269'
    compileOnly 'curse.maven:enchantment-descriptions:2689502'
    compileOnly 'curse.maven:enchantment-descriptions-sources:2689503'
    compileOnly 'curse.maven:pams-harvestcraft:2904825'
    compileOnly 'curse.maven:plants:2697165'
    compileOnly 'curse.maven:placebo:2694382'
    compileOnly 'curse.maven:actually-additions:2844115'
    compileOnly 'curse.maven:better-with-mods:2965308'
    compileOnly 'curse.maven:better-with-lib:2624990'
    compileOnly 'slimeknights.mantle:Mantle:1.12-1.3.3.49'
    compileOnly 'slimeknights:TConstruct:1.12.2-2.13.0.184'
    compileOnly 'cofh:CoFHCore:1.12.2-4.6.3.27:universal'
    compileOnly 'cofh:CoFHWorld:1.12.2-1.3.1.7:universal'
    compileOnly 'cofh:ThermalFoundation:1.12.2-2.6.3.27:universal'
    compileOnly 'cofh:ThermalExpansion:1.12.2-5.5.4.43:universal'
    compileOnly 'cofh:RedstoneFlux:1.12-2.1.0.7:universal'
    compileOnly 'codechicken:CodeChickenLib:1.12.2-3.2.3.358:universal'
    //compileOnly 'curse.maven:just-enough-resources:2728585'
    //compileOnly 'curse.maven:just-enough-resources-sources:2728587'
    deobfCompile 'mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.28-17'

    // Tests
    testImplementation 'junit:junit:4.11'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xinline-classes', '-Xjvm-default=enable']
    }
}